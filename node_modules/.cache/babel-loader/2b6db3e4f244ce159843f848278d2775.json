{"ast":null,"code":"var _jsxFileName = \"/home/yashkhorja/Yola_Yash/Async-Redux/async-redux/src/components/DisplayTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useMemo } from 'react';\nimport { useTable } from 'react-table';\nimport { fetchTodos } from '../redux/todosAction';\nimport { COLUMNS } from './column';\nimport { connect } from 'react-redux';\nimport './DisplayTable.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DisplayTable({\n  todosData,\n  fetchTodos\n}) {\n  _s();\n\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n  console.log(todosData);\n  const DATACOLUMN = [{\n    name: 'Yola',\n    id: '21',\n    username: 'Yash',\n    email: 'yola0800@gmail.com',\n    phone: '9487465456',\n    website: 'yola21'\n  }];\n  const DATA = todosData; // DATA.push(todosData)\n\n  console.log(\"DATA----->\", DATA);\n  console.log(COLUMNS);\n  const columns = useMemo(() => COLUMNS, []);\n  const data = useMemo(() => todosData);\n  console.log(columns);\n  console.log(data);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  });\n  return /*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n        children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(),\n          children: column.render('Header')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 37\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n      children: rows.map(row => {\n        prepareRow(row);\n        return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n          children: row.cells.map(cell => /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n            children: cell.render('Cell')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 41\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DisplayTable, \"StdbulYnzImV6JsUqUW6tj3eA88=\", false, function () {\n  return [useTable];\n});\n\n_c = DisplayTable;\n\nconst mapStateToProps = state => {\n  return {\n    todosData: state.todosData\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchTodos: () => dispatch(fetchTodos())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DisplayTable);\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplayTable\");","map":{"version":3,"sources":["/home/yashkhorja/Yola_Yash/Async-Redux/async-redux/src/components/DisplayTable.js"],"names":["React","useEffect","useMemo","useTable","fetchTodos","COLUMNS","connect","DisplayTable","todosData","console","log","DATACOLUMN","name","id","username","email","phone","website","DATA","columns","data","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect, useMemo } from 'react'\nimport { useTable } from 'react-table';\nimport { fetchTodos } from '../redux/todosAction';\nimport { COLUMNS } from './column';\nimport { connect } from 'react-redux';\nimport './DisplayTable.css';\n\nfunction DisplayTable({ todosData, fetchTodos }) {\n    useEffect(() => {\n        fetchTodos()\n    }, [])\n\n    console.log(todosData)\n    \n    const DATACOLUMN = [{\n        name: 'Yola',\n        id: '21',\n        username: 'Yash',\n        email: 'yola0800@gmail.com',\n        phone: '9487465456',\n        website: 'yola21'\n    }]\n\n    const DATA = todosData;\n    // DATA.push(todosData)\n\n    console.log(\"DATA----->\", DATA)\n\n    console.log(COLUMNS)\n    const columns = useMemo(() => COLUMNS, []);\n    const data = useMemo(() => todosData); \n    console.log(columns);\n    console.log(data)\n\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n    } = useTable({ \n        columns, \n        data\n    })\n\n    return (\n        <table {...getTableProps()}>\n            <thead>\n                {\n                    headerGroups.map(headerGroup => (\n                        <tr {...headerGroup.getHeaderGroupProps()}>\n                            {\n                                headerGroup.headers.map(column => (\n                                    <th {...column.getHeaderProps()}>\n                                        {\n                                            column.render('Header')\n                                        }\n                                    </th>\n                                ))\n                            }\n                        </tr>\n                    ))\n                }\n            </thead>\n            <tbody {...getTableBodyProps()}>\n                {\n                    rows.map(row => {\n                        prepareRow(row)\n                        return (\n                            <tr {...row.getRowProps()}>\n                                {\n                                    row.cells.map(cell => (\n                                        <td {...cell.getCellProps()}>\n                                            {\n                                                cell.render('Cell')\n                                            }\n                                        </td>\n                                    ))\n                                }\n                            </tr>\n                        )\n                    })\n                }\n            </tbody>\n        </table>\n    )\n}\n\nconst mapStateToProps = state => {\n    return{\n        todosData: state.todosData\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return{\n        fetchTodos: () => dispatch(fetchTodos())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DisplayTable);\n"]},"metadata":{},"sourceType":"module"}