[{"/home/yashkhorja/Yola_Yash/Async-Redux/async-redux/src/index.js":"1","/home/yashkhorja/Yola_Yash/Async-Redux/async-redux/src/App.js":"2","/home/yashkhorja/Yola_Yash/Async-Redux/async-redux/src/reportWebVitals.js":"3","/home/yashkhorja/Yola_Yash/Async-Redux/async-redux/src/components/DisplayTable.js":"4","/home/yashkhorja/Yola_Yash/Async-Redux/async-redux/src/redux/store.js":"5","/home/yashkhorja/Yola_Yash/Async-Redux/async-redux/src/components/column.js":"6","/home/yashkhorja/Yola_Yash/Async-Redux/async-redux/src/redux/todosAction.js":"7","/home/yashkhorja/Yola_Yash/Async-Redux/async-redux/src/redux/todosReducer.js":"8","/home/yashkhorja/Yola_Yash/Async-Redux/async-redux/src/redux/todosTypes.js":"9"},{"size":500,"mtime":1615955514478,"results":"10","hashOfConfig":"11"},{"size":316,"mtime":1615962231172,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1615955514478,"results":"13","hashOfConfig":"11"},{"size":2567,"mtime":1615984576700,"results":"14","hashOfConfig":"11"},{"size":207,"mtime":1615957632920,"results":"15","hashOfConfig":"11"},{"size":215,"mtime":1615974143777,"results":"16","hashOfConfig":"11"},{"size":883,"mtime":1615973926369,"results":"17","hashOfConfig":"11"},{"size":670,"mtime":1615962977017,"results":"18","hashOfConfig":"11"},{"size":137,"mtime":1615962331361,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"pnb7bc",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/yashkhorja/Yola_Yash/Async-Redux/async-redux/src/index.js",[],"/home/yashkhorja/Yola_Yash/Async-Redux/async-redux/src/App.js",[],"/home/yashkhorja/Yola_Yash/Async-Redux/async-redux/src/reportWebVitals.js",[],"/home/yashkhorja/Yola_Yash/Async-Redux/async-redux/src/components/DisplayTable.js",["39"],"import React, { useEffect, useMemo } from 'react'\nimport { useTable } from 'react-table';\nimport { fetchTodos } from '../redux/todosAction';\nimport { COLUMNS } from './column';\nimport { connect } from 'react-redux';\nimport './DisplayTable.css';\n\nfunction DisplayTable({ todosData, fetchTodos }) {\n    useEffect(() => {\n        fetchTodos()\n    }, [])\n\n    console.log(todosData)\n    \n    console.log(COLUMNS)\n    const columns = useMemo(() => COLUMNS, []);\n    const data = useMemo(() => todosData, [todosData]); \n    console.log(columns);\n    console.log(data)\n\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n    } = useTable({ \n        columns, \n        data\n    })\n\n    return (\n        <table {...getTableProps()}>\n            <thead>\n                {\n                    headerGroups.map(headerGroup => (\n                        <tr {...headerGroup.getHeaderGroupProps()}>\n                            {\n                                headerGroup.headers.map(column => (\n                                    <th {...column.getHeaderProps()}>\n                                        {\n                                            column.render('Header')\n                                        }\n                                    </th>\n                                ))\n                            }\n                        </tr>\n                    ))\n                }\n            </thead>\n            <tbody {...getTableBodyProps()}>\n                {\n                    rows.map(row => {\n                        prepareRow(row)\n                        return (\n                            <tr {...row.getRowProps()}>\n                                {\n                                    row.cells.map(cell => (\n                                        <td {...cell.getCellProps()}>\n                                            {\n                                                cell.render('Cell')\n                                            }\n                                        </td>\n                                    ))\n                                }\n                            </tr>\n                        )\n                    })\n                }\n            </tbody>\n        </table>\n    )\n}\n\nconst mapStateToProps = state => {\n    return{\n        todosData: state.todosData\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return{\n        fetchTodos: () => dispatch(fetchTodos())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DisplayTable);\n","/home/yashkhorja/Yola_Yash/Async-Redux/async-redux/src/redux/store.js",[],"/home/yashkhorja/Yola_Yash/Async-Redux/async-redux/src/components/column.js",[],"/home/yashkhorja/Yola_Yash/Async-Redux/async-redux/src/redux/todosAction.js",[],"/home/yashkhorja/Yola_Yash/Async-Redux/async-redux/src/redux/todosReducer.js",[],"/home/yashkhorja/Yola_Yash/Async-Redux/async-redux/src/redux/todosTypes.js",[],{"ruleId":"40","severity":1,"message":"41","line":11,"column":8,"nodeType":"42","endLine":11,"endColumn":10,"suggestions":"43"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchTodos'. Either include it or remove the dependency array. If 'fetchTodos' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["44"],{"desc":"45","fix":"46"},"Update the dependencies array to be: [fetchTodos]",{"range":"47","text":"48"},[347,349],"[fetchTodos]"]